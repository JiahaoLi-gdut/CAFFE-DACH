name: "Net for Gene"

# -----------------------------------------------------------------------------
# ----------------------------------------------------------------- Data layer
# -----------------------------------------------------------------------------

# ---------------------------------------------------------------------- Source
# Train phase
layer {
  name: "source_data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_train_lmdb"
    backend: LMDB
    batch_size: 4000
  }
  include: { phase: TRAIN }
}

# Test phase
layer {
  name: "target_data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_test_lmdb"
    backend: LMDB
    batch_size: 2000
  }
  include: { phase: TEST }
}
# data shape: N 1 1 13876

layer {
  name: "logscaler"
  type: "LogScaler"
  bottom: "data"
  top: "data"
}

# ---------------------------------------------------------------------- layer 1
layer {
  name: "grid1"
  type: "Gridding"
  bottom: "data"
  top: "grid1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  gridding_param {
    gridding: "incomplete_gridding"
    kernel_w: 2
    stride_w: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}

layer {
  name: "tanh"
  type: "TanH"
  bottom: "grid1"
  top: "grid1"
}

layer {
  name: "homo_mean_loss"
  type: "HomoMeanLoss"
  bottom: "grid1"
  bottom: "label"
  top: "homo_output"
  top: "predict_measure"
  top: "cluster_variance"
  top: "scatter_variance"
  top: "clusupd_variance"
  top: "scatupd_variance"
  homo_mean_loss_param {
    predict_measure: "rawsubabs-overall-average"
    cluster_measure: "rawsubabs-overall-average"
    scatter_measure: "rawsubabs-samples-average"
    clusupd_measure: "rawsubabs-overall-average"
    scatupd_measure: "rawsubabs-samples-average"
    cluster_regular: "rawsubabs-overall-average"
    scatter_regular: "logsubabs-samples-average"
    cluster_clipmode: "blobal-diff-based"
    scatter_clipmode: "blobal-diff-based"
    cluster_clipprop: 0.2
    scatter_clipprop: 0.1
    cluster_interval: 1
    scatter_interval: 2
    cluster_postpone: 0
    scatter_postpone: 1
    cluster_duration: 1
    scatter_duration: 1
    average_initmode: true
    label_axis: 1
    label_nmax: 2
  }
}

# ----------------------------------------------------------------------------
layer {
  name: "lp_fc"
  type: "InnerProduct"
  bottom: "homo_output"
  top: "lp_fc"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  inner_product_param {
    num_output: 2
    bias_term: false
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}

# ---------------------------------------------------------------------- homomorpher
layer {
  name: "kill_predict_measure"
  type: "Silence"
  bottom: "predict_measure"
  include: { phase: TRAIN }
}

layer {
  name: "homomorpher_accuracy"
  type: "Accuracy"
  bottom: "predict_measure"
  bottom: "label"
  top: "homomorpher_accuracy"
  include: { phase: TEST }
}

layer {
  name: "homomorpher_precision_recall"
  type: "PrecisionRecall"
  bottom: "predict_measure"
  bottom: "label"
  top: "homomorpher_precision"
  top: "homomorpher_recall"
  include: { phase: TEST }
}

layer {
  name: "homomorpher_softmax"
  type: "Softmax"
  bottom: "predict_measure"
  top: "homomorpher_softmax"
  include: { phase: TEST }
}

layer {
  name: "homomorpher_auc"
  type: "AUC"
  bottom: "homomorpher_softmax"
  bottom: "label"
  top: "homomorpher_auc"
  include: { phase: TEST }
}

# ---------------------------------------------------------------------- classifier
layer {
  name: "classifier_accuracy"
  type: "Accuracy"
  bottom: "lp_fc"
  bottom: "label"
  top: "classifier_accuracy"
  include: { phase: TEST }
}

layer {
  name: "classifier_precision_recall"
  type: "PrecisionRecall"
  bottom: "lp_fc"
  bottom: "label"
  top: "classifier_precision"
  top: "classifier_recall"
  include: { phase: TEST }
}

layer {
  name: "classifier_softmax"
  type: "Softmax"
  bottom: "lp_fc"
  top: "classifier_softmax"
  include: { phase: TEST }
}

layer {
  name: "classifier_auc"
  type: "AUC"
  bottom: "classifier_softmax"
  bottom: "label"
  top: "classifier_auc"
  include: { phase: TEST }
}

layer {
  name: "classifier_loss"
  type: "SoftmaxWithLoss"
  bottom: "lp_fc"
  bottom: "label"
  top: "loss"
}
