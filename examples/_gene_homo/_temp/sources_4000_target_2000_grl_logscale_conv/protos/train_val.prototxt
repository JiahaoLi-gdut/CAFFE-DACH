name: "Net for Gene"

# -----------------------------------------------------------------------------
# ----------------------------------------------------------------- Data layer
# -----------------------------------------------------------------------------

# ---------------------------------------------------------------------- Source
# Train phase
layer {
  name: "source_data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_train_lmdb"
    backend: LMDB
    batch_size: 4000
  }
  include: { phase: TRAIN }
}

layer {
  name: "source_data"
  type: "Data"
  top: "data_unused"
  top: "domain"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_train_domain_lmdb"
    backend: LMDB
    batch_size: 4000
  }
  include: { phase: TRAIN }
}

layer {
  name: "kill_data_unused"
  type: "Silence"
  bottom: "data_unused"
  include: { phase: TRAIN }
}

# Test phase
layer {
  name: "target_data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_test_lmdb"
    backend: LMDB
    batch_size: 2000
  }
  include: { phase: TEST }
}
# data shape: N 1 1 13876

layer {
  name: "logscaler"
  type: "LogScaler"
  bottom: "data"
  top: "data"
}

# ---------------------------------------------------------------------- layer 1
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 1
    kernel_w: 2
    kernel_h: 1
    stride_w: 1
    stride_h: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}

layer {
  name: "tanh"
  type: "TanH"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "grl"
  type: "GradientScaler"
  bottom: "conv1"
  top: "grl"
  gradient_scaler_param {
    lower_bound: 0.0
    upper_bound: 1.0
    alpha: 10.0
    max_iter: 5000
  }
}

# ----------------------------------------------------------------------------
layer {
  name: "lp_fc"
  type: "InnerProduct"
  bottom: "conv1"
  top: "lp_fc"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  inner_product_param {
    num_output: 2
    bias_term: false
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}

layer {
  name: "dc_ip"
  type: "InnerProduct"
  bottom: "grl"
  top: "dc_ip"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  inner_product_param {
    num_output: 2
    bias_term: false
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}

layer {
  name: "kill_dc_ip"
  type: "Silence"
  bottom: "dc_ip"
  include: { phase: TEST }
}

# ---------------------------------------------------------------------- output layer
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "lp_fc"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "lp_fc"
  bottom: "label"
  top: "loss"
}
layer {
  name: "dc_loss"
  type: "SoftmaxWithLoss"
  bottom: "dc_ip"
  bottom: "domain"
  top:"dc_loss"
  include: { phase: TRAIN }
}