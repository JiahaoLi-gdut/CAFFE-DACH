name: "Net for Gene"

# -----------------------------------------------------------------------------
# ----------------------------------------------------------------- Data layer
# -----------------------------------------------------------------------------

# ---------------------------------------------------------------------- Source
# Train phase
layer {
  name: "source_data_1"
  type: "Data"
  top: "data_1"
  top: "label_1"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_0_lmdb"
    backend: LMDB
    batch_size: 847
  }
  include: { phase: TRAIN }
}

layer {
  name: "source_data_2"
  type: "Data"
  top: "data_2"
  top: "label_2"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_1_lmdb"
    backend: LMDB
    batch_size: 1432
  }
  include: { phase: TRAIN }
}

layer {
  name: "source_data_3"
  type: "Data"
  top: "data_3"
  top: "label_3"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_2_lmdb"
    backend: LMDB
    batch_size: 1431
  }
  include: { phase: TRAIN }
}

layer {
  name: "source_data_4"
  type: "Data"
  top: "data_4"
  top: "label_4"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_3_lmdb"
    backend: LMDB
    batch_size: 1430
  }
  include: { phase: TRAIN }
}

layer {
  name: "source_data_5"
  type: "Data"
  top: "data_5"
  top: "label_5"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_4_lmdb"
    backend: LMDB
    batch_size: 1430
  }
  include: { phase: TRAIN }
}

layer {
  name: "source_data_6"
  type: "Data"
  top: "data_6"
  top: "label_6"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_5_lmdb"
    backend: LMDB
    batch_size: 1430
  }
  include: { phase: TRAIN }
}

layer {
  name: "target_data_1"
  type: "Data"
  top: "data_7"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_6_lmdb"
    backend: LMDB
    batch_size: 4000
  }
  include: { phase: TRAIN }
}

layer{
  name: "train_data"
  type: "Concat"
  bottom: "data_1"
  bottom: "data_2"
  bottom: "data_3"
  bottom: "data_4"
  bottom: "data_5"
  bottom: "data_6"
  bottom: "data_7"
  top: "data"
  concat_param {
    concat_dim: 0
  }
  include { phase: TRAIN }
}

layer{
  name: "train_label"
  type: "Concat"
  bottom: "label_1"
  bottom: "label_2"
  bottom: "label_3"
  bottom: "label_4"
  bottom: "label_5"
  bottom: "label_6"
  top: "label"
  concat_param {
    concat_dim: 0
  }
  include { phase: TRAIN }
}

# Test phase
layer {
  name: "target_data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_gene_homo/_datasets/gene_6_lmdb"
    backend: LMDB
    batch_size: 4000
  }
  include: { phase: TEST }
}
# data shape: N 1 1 13876

layer {
  name: "logscaler"
  type: "LogScaler"
  bottom: "data"
  top: "data"
}

# ---------------------------------------------------------------------- layer 1
layer {
  name: "grid1"
  type: "Gridding"
  bottom: "data"
  top: "grid1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  gridding_param {
    gridding: "incomplete_gridding"
    kernel_w: 2
    stride_w: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}

layer{
  name: "tanh"
  type: "TanH"
  bottom: "grid1"
  top: "grid1"
  include {
    phase: TRAIN
  }
}

layer{
  name: "w_glb"
  type: "Pooling"
  bottom: "grid1"
  top: "grid1_glb"
  include {
    phase: TRAIN
  }
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}

layer{
  name: "slice_assignment"
  type: "Slice"
  bottom: "grid1_glb"
  top: "grid1_glb_source"
  top: "grid1_glb_target"
  include {
    phase: TRAIN
  }
  slice_param {
    axis: 0
    slice_point: 8000
  }
}

layer{
  name: "predictor-source"
  type: "InnerProduct"
  bottom: "grid1_glb_source"
  top: "w_score_source"
  param {
  name: "wpredictor-source"
    lr_mult: 10.0
    decay_mult: 1.0
  }
  param {
  name: "bpredictor-source"
    lr_mult: 20.0
    decay_mult: 0.0
  }
  include {
    phase: TRAIN
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "silence_grid1_glb_target"
  type: "Silence"
  bottom: "grid1_glb_target"
  include {
    phase: TRAIN
  }
}

layer{
  name: "entropy_w-source"
  type: "EntropyLoss"
  bottom: "w_score_source"
  top: "entropy_w-source"
  loss_weight: 0.1
  include {
    phase: TRAIN
  }
}

layer{
  name: "w_soft-source"
  type: "Softmax"
  bottom: "w_score_source"
  top: "w-source"
  include {
    phase: TRAIN
  }
  softmax_param {
    axis: 1
  }
}

layer{
  name: "w_slicers"
  type: "Slice"
  bottom: "w-source"
  top: "ws1"
  top: "ws2"
  top: "ws3"
  top: "ws4"
  top: "ws5"
  top: "ws6"
  include {
    phase: TRAIN
  }
  slice_param {
    axis: 1
  }
}

layer{
  name: "classifier"
  type: "InnerProduct"
  bottom: "grid1"
  top: "scorer"
  param {
  name: "wclassifier"
    lr_mult: 10.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer{
  name: "slicer_scorer"
  type: "Slice"
  bottom: "scorer"
  top: "scorer_source"
  top: "scorer_target"
  include {
    phase: TRAIN
  }
  slice_param {
    axis: 0
    slice_point: 8000
  }
}

layer{
  name: "wbn_scs1"
  type: "MultiModalBatchNorm"
  bottom: "scorer_source"
  bottom: "ws1"
  top: "score_wbns1"
  include {
    phase: TRAIN
  }
  multimodal_batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer{
  name: "wbn_scs2"
  type: "MultiModalBatchNorm"
  bottom: "scorer_source"
  bottom: "ws2"
  top: "score_wbns2"
  include {
    phase: TRAIN
  }
  multimodal_batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer{
  name: "wbn_scs3"
  type: "MultiModalBatchNorm"
  bottom: "scorer_source"
  bottom: "ws3"
  top: "score_wbns3"
  include {
    phase: TRAIN
  }
  multimodal_batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer{
  name: "wbn_scs4"
  type: "MultiModalBatchNorm"
  bottom: "scorer_source"
  bottom: "ws4"
  top: "score_wbns4"
  include {
    phase: TRAIN
  }
  multimodal_batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer{
  name: "wbn_scs5"
  type: "MultiModalBatchNorm"
  bottom: "scorer_source"
  bottom: "ws5"
  top: "score_wbns5"
  include {
    phase: TRAIN
  }
  multimodal_batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer{
  name: "wbn_scs6"
  type: "MultiModalBatchNorm"
  bottom: "scorer_source"
  bottom: "ws6"
  top: "score_wbns6"
  include {
    phase: TRAIN
  }
  multimodal_batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer{
  name: "wbn_sc_sum_source"
  type: "Eltwise"
  bottom: "score_wbns1"
  bottom: "score_wbns2"
  bottom: "score_wbns3"
  bottom: "score_wbns4"
  bottom: "score_wbns5"
  bottom: "score_wbns6"
  top: "score_wbns"
  include {
    phase: TRAIN
  }
  eltwise_param {
    operation:SUM
    coeff: 1
    coeff: 1
    coeff: 1
    coeff: 1
    coeff: 1
    coeff: 1
  }
}

layer{
  name: "bnt_wbn_sc"
  type: "BatchNorm"
  bottom: "scorer_target"
  top: "score_wbnt"
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  include {
    phase: TRAIN
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer{
  name: "bnt_wbn_sc"
  type: "BatchNorm"
  bottom: "scorer"
  top: "score_wbn"
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  include {
    phase: TEST
  }
  batch_norm_param {
    moving_average_fraction: 0.95
  }
}

layer{
  name: "concat_wbn_sc"
  type: "Concat"
  bottom: "score_wbns"
  bottom: "score_wbnt"
  top: "score_wbn"
  include {
    phase: TRAIN
  }
  concat_param {
    axis: 0
  }
}

layer{
  name: "sb_score"
  type: "Scale"
  bottom: "score_wbn"
  top: "score_sb"
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  param {
    lr_mult: 1.0
    decay_mult: 0.0
  }
  scale_param {
    filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 1
    num_axes: 1
    bias_term: true
  }
}

layer{
  name: "slicer_score"
  type: "Slice"
  bottom: "score_sb"
  top: "score_source"
  top: "score_target"
  include {
    phase: TRAIN
  }
  slice_param {
    axis: 0
    slice_point: 8000
  }
}

layer{
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "score_source"
  bottom: "label"
  top: "loss"
  loss_weight: 1
  include {
    phase: TRAIN
  }
}

layer{
  name: "entropy"
  type: "EntropyLoss"
  bottom: "score_target"
  top: "entropy"
  loss_weight: 0.1
  include {
    phase: TRAIN
  }
}

layer{
  name: "accuracy"
  type: "Accuracy"
  bottom: "score_sb"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}