name: "AlexNet for Office"

# -----------------------------------------------------------------------------------
# Train phase

layer {
  name: "major_source"
  type: "Data"
  top: "major_source_datum"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_icmmd/_datasets/amazon_train_0_lmdb"
    backend: LMDB
    batch_size: 64
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}

# -----------------------------------------------------------------------------------

layer {
  name: "latch_source"
  type: "Data"
  top: "latch_source_datum"
  data_param {
    source: "/home/ljh/caffe-master/examples/_icmmd/_datasets/amazon_train_0_lmdb"
    backend: LMDB
    batch_size: 32
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}

layer {
  name: "latch_source_label"
  type: "Param2Top"
  top: "latch_source_label"
  param {
    name: "latch_source_pseudo"
  }
  param2top_param {
    data_filler {
      type: "constant"
      value: -1
    }
    data_refill: 1
    shape {
      dim: 32
    }
  }
  include: { phase: TRAIN }
}

layer {
  name: "icmmd_source"
  type: "ClassLatch"
  bottom: "latch_source_datum"
  bottom: "latch_source_label"
  top: "icmmd_source_datum"
  class_latch_param {
    label_nmax: 31
    latch_nmin: 10
  }
  include: { phase: TRAIN }
}

# -----------------------------------------------------------------------------------

layer {
  name: "latch_target"
  type: "Data"
  top: "latch_target_datum"
  data_param {
    source: "/home/ljh/caffe-master/examples/_icmmd/_datasets/webcam_train_0_lmdb"
    backend: LMDB
    batch_size: 32
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}

layer {
  name: "latch_target_label"
  type: "Param2Top"
  top: "latch_target_label"
  param {
    name: "latch_target_pseudo"
  }
  param2top_param {
    data_filler {
      type: "constant"
      value: -1
    }
    data_refill: 1
    shape {
      dim: 32
    }
  }
  include: { phase: TRAIN }
}

layer {
  name: "icmmd_target"
  type: "ClassLatch"
  bottom: "latch_target_datum"
  bottom: "latch_target_label"
  top: "icmmd_target_datum"
  class_latch_param {
    label_nmax: 31
    latch_nmin: 10
  }
  include: { phase: TRAIN }
}

# -----------------------------------------------------------------------------------

layer {
  name: "train_data"
  type: "Concat"
  bottom: "major_source_datum"
  bottom: "icmmd_source_datum"
  bottom: "icmmd_target_datum"
  top: "data"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}

# -----------------------------------------------------------------------------------
# Test phase

layer {
  name: "target_test"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_icmmd/_datasets/webcam_train_0_lmdb"
    backend: LMDB
    batch_size: 1
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TEST }
}

# ----------------------------------------------------------------------------

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_c: 1
    kernel_h: 3
    kernel_w: 3
    stride_c: 1
    stride_h: 2
    stride_w: 2
  }
}

# ----------------------------------------------------------------------------

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_c: 1
    kernel_h: 3
    kernel_w: 3
    stride_c: 1
    stride_h: 2
    stride_w: 2
  }
}

# ----------------------------------------------------------------------------

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

# ----------------------------------------------------------------------------

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}

# ----------------------------------------------------------------------------

layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}

layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_c: 1
    kernel_h: 3
    kernel_w: 3
    stride_c: 1
    stride_h: 2
    stride_w: 2
  }
}

# ----------------------------------------------------------------------------

layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}

layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# ----------------------------------------------------------------------------

layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}

layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "lp_fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "lp_fc8"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 31
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

# ----------------------------------------------------------------------------

layer {
  name: "slice_fc7_features"
  type: "Slice"
  bottom: "fc7"
  top: "major_fc7_features"
  top: "icmmd_fc7_features"
  slice_param {
    slice_dim: 0
    slice_point: 64
  }
  include: { phase: TRAIN }
}

layer {
  name: "kill_major_fc7_features"
  type: "Silence"
  bottom: "major_fc7_features"
  include: { phase: TRAIN }
}

layer {
  name: "slice_fc8_features"
  type: "Slice"
  bottom: "lp_fc8"
  top: "major_fc8_features"
  top: "icmmd_fc8_features"
  slice_param {
    slice_dim: 0
    slice_point: 64
  }
  include: { phase: TRAIN }
}

# -----------------------------------------------------------------------------

layer {
  name: "train_loss"
  type: "SoftmaxWithLoss"
  bottom: "major_fc8_features"
  bottom: "label"
  top: "train_loss"
  include: { phase: TRAIN }
}

layer {
  name: "test_loss"
  type: "SoftmaxWithLoss"
  bottom: "lp_fc8"
  bottom: "label"
  top: "test_loss"
  include: { phase: TEST }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "lp_fc8"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}

# -----------------------------------------------------------------------------

layer {
  name: "slice_icmmd_fc7_features"
  type: "Slice"
  bottom: "icmmd_fc7_features"
  top: "icmmd_source_fc7_features"
  top: "icmmd_target_fc7_features"
  slice_param {
    slice_dim: 0
    slice_point: 32
  }
  include: { phase: TRAIN }
}

layer {
  name: "mmdx_loss"
  type: "MMDXLoss"
  bottom: "icmmd_source_fc7_features"
  bottom: "icmmd_target_fc7_features"
  top: "mmd_loss"
  mmd_loss_param {
    kernel_numb: 1
    kernel_mult: 2.0
    loss_weight: 0.01
  }
  include: { phase: TRAIN }
}

# -----------------------------------------------------------------------------

layer {
  name: "icmmd_fc8_prob"
  type: "Softmax"
  bottom: "icmmd_fc8_features"
  top: "icmmd_fc8_prob"
  include: { phase: TRAIN }
}

layer {
  name: "icmmd_fc8_class"
  type: "ArgMax"
  bottom: "icmmd_fc8_prob"
  top: "icmmd_fc8_class"
  include: { phase: TRAIN }
}

layer {
  name: "reshaped_fc8_class"
  type: "Reshape"
  bottom: "icmmd_fc8_class"
  top: "reshaped_icmmd_fc8_class"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
    }
  }
  include: { phase: TRAIN }
}

layer {
  name: "slice_reshaped_icmmd_fc8_class"
  type: "Slice"
  bottom: "reshaped_icmmd_fc8_class"
  top: "icmmd_source_class"
  top: "icmmd_target_class"
  slice_param {
    slice_dim: 0
    slice_point: 32
  }
  include: { phase: TRAIN }
}

layer {
  name: "latch_source_pseudo"
  type: "Bottom2Param"
  bottom: "icmmd_source_class"
  param {
    name: "latch_source_pseudo"
  }
  include: { phase: TRAIN }
}

layer {
  name: "latch_target_pseudo"
  type: "Bottom2Param"
  bottom: "icmmd_target_class"
  param {
    name: "latch_target_pseudo"
  }
  include: { phase: TRAIN }
}
