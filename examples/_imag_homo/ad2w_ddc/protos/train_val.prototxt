name: "AlexNet for Office"

# -----------------------------------------------------------------------------
# ----------------------------------------------------------------- Data layer
# -----------------------------------------------------------------------------

# ---------------------------------------------------------------------- Source
# Train phase
layer {
  name: "source_train_0"
  type: "Data"
  top: "source_train_data_0"
  top: "source_train_label_0"
  data_param {
    source: "/home/ljh/caffe-master/examples/_imag_homo/_datasets/amazon_train_0_lmdb"
    backend: LMDB
    batch_size: 140
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "source_train_domain_0"
  type: "DummyData"
  top: "source_train_domain_0"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 0
    }
    num: 140
    channels: 1
    height: 1
    width: 1
  }
  include: { phase: TRAIN }
}

layer {
  name: "source_train_1"
  type: "Data"
  top: "source_train_data_1"
  top: "source_train_label_1"
  data_param {
    source: "/home/ljh/caffe-master/examples/_imag_homo/_datasets/dslr_train_0_lmdb"
    backend: LMDB
    batch_size: 24
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "source_train_domain_1"
  type: "DummyData"
  top: "source_train_domain_1"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 1
    }
    num: 24
    channels: 1
    height: 1
    width: 1
  }
  include: { phase: TRAIN }
}

# ---------------------------------------------------------------------- Target
# Test phase
layer {
  name: "target_test"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_imag_homo/_datasets/webcam_train_0_lmdb"
    backend: LMDB
    batch_size: 39
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TEST }
}

# ---------------------------------------------------------- Data concatenation
# Train phase
layer {
  name: "concat_train_data"
  type: "Concat"
  bottom: "source_train_data_0"
  bottom: "source_train_data_1"
  top: "data"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}

layer {
  name: "concat_train_label"
  type: "Concat"
  bottom: "source_train_label_0"
  bottom: "source_train_label_1"
  top: "label"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}

layer {
  name: "concat_train_domain"
  type: "Concat"
  bottom: "source_train_domain_0"
  bottom: "source_train_domain_1"
  top: "domain"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}

# ----------------------------------------------------------------------------
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_c: 1
    kernel_h: 3
    kernel_w: 3
    stride_c: 1
    stride_h: 2
    stride_w: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

# ----------------------------------------------------------------------------
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_c: 1
    kernel_h: 3
    kernel_w: 3
    stride_c: 1
    stride_h: 2
    stride_w: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

# ----------------------------------------------------------------------------
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
# ----------------------------------------------------------------------------
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
# ----------------------------------------------------------------------------
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_c: 1
    kernel_h: 3
    kernel_w: 3
    stride_c: 1
    stride_h: 2
    stride_w: 2
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# ----------------------------------------------------------------------------
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "mmd_loss"
  type: "MMDLoss"
  bottom: "fc7"
  bottom: "fc7"
  bottom: "domain"
  bottom: "domain"
  top: "mmd_loss"
  mmd_loss_param {
    kernel_numb: 1
    kernel_mult: 2.0
    loss_weight: 1
  }
  include: { phase: TRAIN }
}

# ----------------------------------------------------------------------------
layer {
  name: "lp_fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "lp_fc8"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 31
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "lp_fc8"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "lp_fc8"
  bottom: "label"
  top: "loss"
}
