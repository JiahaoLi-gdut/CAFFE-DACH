name: "AlexNet for Office"

# ---------------------------------------------------------------------- Source
# Train phase
layer {
  name: "source_train"
  type: "Data"
  top: "source_train_data"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_mpd_homo/_datasets/dslr_train_0_lmdb"
    backend: LMDB
    batch_size: 64
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}

# ---------------------------------------------------------------------- Target
# Train phase
layer {
  name: "target_train"
  type: "Data"
  top: "target_train_data"
  top: "target_train_label_unused"
  data_param {
    source: "/home/ljh/caffe-master/examples/_mpd_homo/_datasets/webcam_train_0_lmdb"
    backend: LMDB
    batch_size: 64
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}

layer {
  name: "kill_target_train_label_unused"
  type: "Silence"
  bottom: "target_train_label_unused"
  include: { phase: TRAIN }
}

layer {
  name: "target_train_label"
  type: "DummyData"
  top: "target_train_label_"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: -1
    }
    num: 64
    channels: 1
    height: 1
    width: 1
  }
  include: { phase: TRAIN }
}

layer {
  name: "reshape"
  type: "Reshape"
  bottom: "target_train_label_"
  top: "target_train_label"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
    }
  }
  include: { phase: TRAIN }
}

# Test phase
layer {
  name: "target_test"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "/home/ljh/caffe-master/examples/_mpd_homo/_datasets/webcam_train_0_lmdb"
    backend: LMDB
    batch_size: 1
  }
  transform_param {
    crop_size: 227
    mean_file: "/home/ljh/caffe-master/data/ilsvrc12/imagenet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TEST }
}

# ---------------------------------------------------------- Data concatenation
# Train phase
layer {
  name: "concat_train_data"
  type: "Concat"
  bottom: "source_train_data"
  bottom: "target_train_data"
  top: "data"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}

layer {
  name: "concat_train_label"
  type: "Concat"
  bottom: "label"
  bottom: "target_train_label"
  top: "train_label"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}

# ----------------------------------------------------------------------------
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_c: 1
    kernel_h: 3
    kernel_w: 3
    stride_c: 1
    stride_h: 2
    stride_w: 2
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_c: 1
    kernel_h: 3
    kernel_w: 3
    stride_c: 1
    stride_h: 2
    stride_w: 2
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
# ----------------------------------------------------------------------------
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
# ----------------------------------------------------------------------------
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_c: 1
    kernel_h: 3
    kernel_w: 3
    stride_c: 1
    stride_h: 2
    stride_w: 2
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# -----------------------------------------------------------------------------
# ---------------------------------------------------------------- Homomorphism
# -----------------------------------------------------------------------------
# Train phase
layer {
  name: "homo_mean_loss"
  type: "HomoMeanLoss"
  bottom: "fc7"
  bottom: "train_label"
  top: "homo_output"
  top: "ovalize_measure"
  homo_mean_loss_param {
    odotter_measure: "rawsubsqr-overall-average"
    ovalize_measure: "rawsubsqr-sqroots-sqroots"
    odotter_regular: "rawsubsqr-overall-average"
    ovalize_regular: "expsubsqr-sqroots-sqroots"
    ovalize_clipmode: "blobal-diff-based"
    ovalize_lowrprop: 0.0
    ovalize_upprprop: 1.0
    ovalize_feedrate: 1.0
    ovalize_feedsize: 50000
    ovalize_tradeoff: 1.0
    ovals2s_01stprop: 1.0
    ovals2s_02ndprop: 1.0
    ovalt2t_01stprop: 1.0
    ovalt2t_02ndprop: 1.0
    ovals2t_01stprop: 1.0
    ovals2t_02ndprop: 1.0
    ovalize_interval: 1
    ovalize_postpone: 0
    ovalize_duration: 1
    average_initmode: true
    match_numb: 256
    label_axis: 1
    label_nmax: 31
    ovalize_activate: true
  }
  include: { phase: TRAIN }
}

layer {
  name: "slice_features"
  type: "Slice"
  bottom: "homo_output"
  top: "features"
  top: "target_features"
  slice_param {
    slice_dim: 0
    slice_point: 64
  }
  include: { phase: TRAIN }
}

layer {
  name: "kill_target_features"
  type: "Silence"
  bottom: "target_features"
  include: { phase: TRAIN }
}

# Test phase
layer {
  name: "ignore_homo_output"
  type: "Split"
  bottom: "fc7"
  top: "features"
  include: { phase: TEST }
}

#----------------------------------------------------------------------------
layer {
  name: "lp_fc8"
  type: "InnerProduct"
  bottom: "features"
  top: "lp_fc8"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 31
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "lp_fc8"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "lp_fc8"
  bottom: "label"
  top: "loss"
}
